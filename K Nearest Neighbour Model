import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier

! git clone https://github.com/rc700/datasets_for_ml_teaching.git

data = pd.read_csv('datasets_for_ml_teaching/Iris.csv', engine='python')

color_list = ['red' if i=='Iris-setosa' else ('green' if 'Iris-versicolor' else 'Iris-virginica') for i in data.loc[:,'Species']]
pd.plotting.scatter_matrix(data.loc[:, data.columns != 'Species'],
                                       c=color_list,
                                       figsize= [15,15],
                                       diagonal='hist',
                                       alpha=0.5,
                                       s = 200,
                                       marker = '-',
                                       edgecolor= "pink")
plt.show()

# X is all columns, not including Class column
# Y is Class column only
x,y = data.loc[:,data.columns != 'Species'], data.loc[:,'Species']

# X = Features
# Y = Targets
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3,random_state = 1)

# Looks at the closest neighbours
knn = KNeighborsClassifier(n_neighbors = 6)

# Train the model
knn.fit(x_train,y_train)

# Get prediction
prediction = knn.predict(x_test)

# Scoring % of the time the model was correct
print('With KNN (K=6) accuracy is: ',knn.score(x_test,y_test)) # prints model's accuracy
